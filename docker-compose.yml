version: '3'

services:
  # Base de datos mongoDB
  service_db:
    image: mongo:4.0
    container_name: db-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: admin
    volumes:
      - /home/vagrant/data:/data/db
      # create-user.js ; Se ejecutar√° solo si la carpeta /data/db
      # no contenga contenido de MongoDB (es decir, si no se ha inicializado MongoDB) 
      - /home/vagrant/workspace/data/create-user.js:/docker-entrypoint-initdb.d/create-user.js:ro
    ports:
      - "2755:27017"
    healthcheck:
      test: 'mongo --eval "db.runCommand({ ping: 1 })"'
      interval: 30s
      timeout: 10s
      retries: 5
    #command: mongod --dbpath /data/db --repair
    #command: mongod --port 27080 --dbpath /data/db
    command: mongod --bind_ip_all --auth
    
  service_mongoose:
    image: node:14.21-alpine
    container_name: app-mongoose
    build: 
        context: ./mongoose
        dockerfile: mongoose.Dockerfile
    volumes:
      - /home/max98/workspace/mongoose
      - /home/max98/workspace/mongoose/node_modules
    ports:
      - "3055:3055"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3055"]
      interval: 30s 
      timeout: 10s
      retries: 5
    depends_on:
      - service_api
    links:
      - service_api
    command: npm run dev